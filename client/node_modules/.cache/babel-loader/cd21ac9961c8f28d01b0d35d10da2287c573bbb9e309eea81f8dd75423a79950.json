{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar e = require(\"react\");\nexports.default = function (r, t) {\n  var n = e.useRef();\n  e.useEffect(function () {\n    n.current = r;\n  }, [r]), e.useEffect(function () {\n    if (null !== t) {\n      var e = setInterval(function () {\n        return n.current.apply(n, arguments);\n      }, t);\n      return function () {\n        return clearInterval(e);\n      };\n    }\n  }, [t]);\n};","map":{"version":3,"names":["r","t","n","e","useRef","useEffect","current","setInterval","apply","arguments","clearInterval"],"sources":["/Users/eddyzheng/Documents/Javascript Projects/node test/chatapp/client/node_modules/@use-it/interval/src/index.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\ntype Delay = number | null;\ntype TimerHandler = (...args: any[]) => void;\n\nconst useInterval = (callback: TimerHandler, delay: Delay) => {\n  const savedCallbackRef = useRef<TimerHandler>();\n\n  useEffect(() => {\n    savedCallbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const handler = (...args: any[]) => savedCallbackRef.current!(...args);\n\n    if (delay !== null) {\n      const intervalId = setInterval(handler, delay);\n      return () => clearInterval(intervalId);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n"],"mappings":";;;;;;kBAKoB,UAACA,CAAA,EAAwBC,CAAA;EAAA,IACrCC,CAAA,GAAmBC,CAAA,CAAAC,MAAA;EAEzBD,CAAA,CAAAE,SAAA,CAAU;IACRH,CAAA,CAAiBI,OAAA,GAAUN,CAAA;EAAA,GAC1B,CAACA,CAAA,IAEJG,CAAA,CAAAE,SAAA,CAAU;IAAA,IAGM,SAAVJ,CAAA,EAAgB;MAAA,IACZE,CAAA,GAAaI,WAAA,CAHL;QAAA,OAAoBL,CAAA,CAAiBI,OAAA,CAAAE,KAAA,CAAjBN,CAAA,EAAAO,SAAA;MAAA,GAGMR,CAAA;MAAA,OACjC;QAAA,OAAMS,aAAA,CAAcP,CAAA;MAAA;IAAA;EAAA,GAE5B,CAACF,CAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}