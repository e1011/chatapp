{"ast":null,"code":"var _jsxFileName = \"/Users/eddyzheng/Documents/Javascript Projects/node test/chatapp/client/src/Messages.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport useInterval from '@use-it/interval';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Messages({\n  currentUser,\n  selectedRoom\n}) {\n  _s();\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  function handleMessageChange(e) {\n    setCurrentMessage(e.target.value);\n  }\n  async function loadMessages() {\n    const result = await axios.post(\"/getmessages\", {\n      selectedRoom: selectedRoom\n    });\n    setMessages(result.data.reverse());\n  }\n  useEffect(() => {\n    loadMessages();\n    setCurrentMessage(\"\");\n  }, [selectedRoom]);\n  async function handleMessageSend(e) {\n    e.preventDefault();\n    await axios.post(\"/sendmessage\", {\n      currentUser: currentUser,\n      currentMessage: currentMessage,\n      selectedRoom: selectedRoom\n    });\n    setCurrentMessage(\"\");\n    loadMessages();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messagesContainer1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messagesContainer2\",\n        children: messages.map(function (message) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageContainer\",\n            children: [message[2] && message[4] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nameContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: (!message[2] || message[1] === currentUser) && \"invisible\",\n                children: message[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 41\n              }, this), message[4] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: new Date(message[3]).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 56\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: (!message[2] || message[1] !== currentUser) && \"invisible\",\n                children: message[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: message[1] === currentUser ? \"user message\" : \"other message\",\n                children: message[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)]\n          }, message[3], true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageInputContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleMessageSend,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: currentMessage,\n          onChange: handleMessageChange,\n          type: \"text\",\n          placeholder: `message ${selectedRoom}`,\n          className: \"messageInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sendButton\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Messages, \"R5bu8BDuOgE43WcjWAiVqCObrGs=\");\n_c = Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["useState","useEffect","axios","useInterval","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","currentUser","selectedRoom","_s","currentMessage","setCurrentMessage","messages","setMessages","handleMessageChange","e","target","value","loadMessages","result","post","data","reverse","handleMessageSend","preventDefault","children","className","map","message","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleString","onSubmit","onChange","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/eddyzheng/Documents/Javascript Projects/node test/chatapp/client/src/Messages.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport useInterval from '@use-it/interval';\n\nexport function Messages({currentUser, selectedRoom}) {\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n\n    \n    function handleMessageChange(e) {\n        setCurrentMessage(e.target.value);\n    }\n\n    async function loadMessages() {\n        const result = await axios.post(\"/getmessages\", {selectedRoom: selectedRoom});\n        setMessages(result.data.reverse());\n    }\n\n    useEffect(() => {\n        loadMessages();\n        setCurrentMessage(\"\");\n    }, [selectedRoom]);\n\n    async function handleMessageSend(e) {\n        e.preventDefault();\n        await axios.post(\"/sendmessage\", {currentUser: currentUser, currentMessage: currentMessage, selectedRoom: selectedRoom});\n        setCurrentMessage(\"\");\n        loadMessages();\n    }\n\n    return (\n        <>  \n            <div className=\"messagesContainer1\">\n                <div className=\"messagesContainer2\">\n                    {messages.map(function(message) {\n                        return (\n                            <div className=\"messageContainer\" key={message[3]}>\n                                { \n                                    message[2] && message[4] &&\n                                    <div className=\"nameContainer\">\n                                        <div \n                                        className={(!message[2] || message[1] === currentUser) && \"invisible\"}>\n                                            {message[1]}\n                                        </div>\n                                        {message[4] && <div className=\"date\">{(new Date(message[3])).toLocaleString()}</div>}\n                                        <div \n                                        className={(!message[2] || message[1] !== currentUser) && \"invisible\"}>\n                                            {message[1]}\n                                        </div>\n                                    </div>\n                                }\n                                <div>\n                                    <button className={message[1] === currentUser? \"user message\" : \"other message\"}>\n                                        {message[0]} \n                                    </button>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className=\"messageInputContainer\">\n                <form onSubmit={handleMessageSend}>\n                    <input\n                        value={currentMessage}\n                        onChange={handleMessageChange}\n                        type=\"text\"\n                        placeholder={`message ${selectedRoom}`}\n                        className=\"messageInput\"\n                    />\n                    <button className=\"sendButton\">Send</button>\n                </form>\n            </div>\n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}